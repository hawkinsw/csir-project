#!/usr/bin/python

import urllib2
from bs4 import BeautifulSoup, Comment

class DoxygenClass:
	pass

class DoxygenFile:
	pass

class DoxygenSite:
	def __init__(self, potentialDoxygenSite):
		self.url = potentialDoxygenSite.url;
		self.parsedDocument = potentialDoxygenSite.parsedDocument;
		self.parsedFilesDocument = None
		self.parsedClassesDocument = None
		self.files = []
		self.classes = []

	def __repr__(self):
		return "Doxygen site @ " + self.url + "."

	##
	# Internal Use Only:
	# Since both classes and files
	# are lists of els, use this function to
	# parse them with the same code.
	##
	def __getElList(self, url, doc, storage):
		if not len(storage):
			if doc == None:
				response = urllib2.urlopen(self.url + url)
				doc = BeautifulSoup(response.read())
				response.close()

			els = doc.findAll("a", class_="el")
			for e in els:
				storage.append(e['href'])

	def getFileList(self):
		self.__getElList("files.html", self.parsedFilesDocument, self.files)
	
	def getClassList(self):
		self.__getElList("annotated.html", self.parsedClassesDocument, self.classes)

	def forEachFile(self, l, absolute=False):
		if absolute:
			for f in self.files:
				l(self.url + f)
		else:
			map(l, self.files)
	
	def forEachClass(self, l, absolute=False):
		if absolute:
			for f in self.classes:
				l(self.url + f)
		else:
			map(l, self.classes)

class PotentialDoxygenSite:
	def __init__(self, doxygenUrl):
		self.url = doxygenUrl
		self.parsedDocument = None

	def isDoxygenSite(self):
		isDoxygen = False
		if self.parsedDocument == None:
			response = urllib2.urlopen(self.url)
			self.parsedDocument = BeautifulSoup(response.read())
			response.close()

		comments = self.parsedDocument.findAll(text=lambda text:
			isinstance(text, Comment))
		for comment in comments:
			if "generated by doxygen" in comment.lower():
				isDocument = True
		
		return isDocument
